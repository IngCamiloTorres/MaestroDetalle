/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.maestrodetalle.GIU;

import com.maestrodetalle.DAO.empleadoDao;
import com.maestrodetalle.DTO.empleadoDTO;
import com.maestrodetalle.DTO.personaDTO;
import com.maestrodetalle.facade.Fachada;
import com.maestrodetalle.observer.Observador;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.io.ByteArrayInputStream;

import java.io.File;

import java.sql.SQLException;
import java.util.Base64;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import org.opencv.core.Mat;
import org.opencv.videoio.VideoCapture;
import org.opencv.videoio.VideoWriter;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JOptionPane;
import org.opencv.core.Core;

/**
 *
 * @author Emmanuel Martinez Si
 */
public class empleadoGestion extends javax.swing.JPanel implements Observador {

    private byte[] bytes;
    private VideoCapture capture;
    private Timer timer;
    private Fachada fachada = new Fachada();
    private byte[] videoBytes = null;
    private byte[] videoBytesGuardar = null;
    private byte[] videoBytesNube = null;
    String rutaDirectorio = "C:\\Users\\emman\\OneDrive\\Escritorio\\maestroDetalle\\maestroDetalle\\VideosEmpleados\\";
    String rutaNube = "G:\\Mi unidad\\VideoEmpleados\\";
    //private VideoCapture captureVideo = new VideoCapture(0);
    /**
     * Creates new form PostgreSQL
     */
    public empleadoGestion(){
        initComponents();
        tomarFotoCamara.setVisible(false);
        iniciarGrabacion.setVisible(false);
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        generoSeleccionado = new javax.swing.JComboBox<>();
        Continuar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        refrescar = new javax.swing.JButton();
        cargoElegido = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        salarioMenor = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        idBuscar = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        nombrePersona = new javax.swing.JTextField();
        apellidosPersona = new javax.swing.JTextField();
        fechaNacimientoPersona = new javax.swing.JTextField();
        emailPersona = new javax.swing.JTextField();
        imagenEmpleado = new javax.swing.JLabel();
        direccionResidenciaPersona = new javax.swing.JTextField();
        numeroPersona = new javax.swing.JTextField();
        generoPersona = new javax.swing.JTextField();
        identificacion = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        videoMostrado = new javax.swing.JLabel();
        buscarVideoEmpleado = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        busquedaVideo = new javax.swing.JTextField();
        bdSeleccionado = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEmpleadosTiempoReal = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        documentoIdentidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nombres = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        fechaNacimiento = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        direccionResidencia = new javax.swing.JTextField();
        numeroContacto = new javax.swing.JTextField();
        lblImage = new javax.swing.JLabel();
        selectImage = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        tomarFoto = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        cargoSeleccionado = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        salarioIngresado = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        iD = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        fechaIngreso = new javax.swing.JTextField();
        fechaSalida = new javax.swing.JTextField();
        tomarFotoCamara = new javax.swing.JButton();
        iniciarGrabacion = new javax.swing.JButton();

        jPanel1.setPreferredSize(new java.awt.Dimension(772, 492));

        generoSeleccionado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hombre", "Mujer" }));
        generoSeleccionado.setToolTipText("");
        generoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoSeleccionadoActionPerformed(evt);
            }
        });

        Continuar.setText("Agregar Empleado");
        Continuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinuarActionPerformed(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaEmpleados);

        refrescar.setText("Refrescar");
        refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarActionPerformed(evt);
            }
        });

        cargoElegido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Contador", "Vendedor", "Equipo Tecnico" }));

        jLabel1.setText("Cargo");

        jLabel3.setText("Salario mayor a");

        salarioMenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salarioMenorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargoElegido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salarioMenor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refrescar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(refrescar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargoElegido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(salarioMenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jTabbedPane1.addTab("Historial Laboral", jPanel2);

        jLabel15.setText("ID");

        jButton3.setText("Buscar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(568, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jButton3))
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Comisiones", jPanel3);

        jLabel13.setText("ID");

        idBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idBuscarActionPerformed(evt);
            }
        });

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        nombrePersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombrePersonaActionPerformed(evt);
            }
        });

        apellidosPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosPersonaActionPerformed(evt);
            }
        });

        imagenEmpleado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(idBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Buscar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(apellidosPersona, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                                .addComponent(fechaNacimientoPersona, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nombrePersona, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(direccionResidenciaPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(generoPersona, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                .addComponent(numeroPersona, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(emailPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(imagenEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(idBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Buscar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(direccionResidenciaPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombrePersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numeroPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apellidosPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generoPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaNacimientoPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addComponent(imagenEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Soportes", jPanel4);

        videoMostrado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buscarVideoEmpleado.setText("Buscar");
        buscarVideoEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarVideoEmpleadoActionPerformed(evt);
            }
        });

        jLabel14.setText("ID");

        bdSeleccionado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Directorio", "Base de Datos", "Nube" }));
        bdSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdSeleccionadoActionPerformed(evt);
            }
        });

        jLabel2.setText("Importar de:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(busquedaVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bdSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buscarVideoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(videoMostrado, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(busquedaVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(bdSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarVideoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(videoMostrado, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Video", jPanel5);

        tablaEmpleadosTiempoReal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tablaEmpleadosTiempoReal);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 776, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Lista Empleados", jPanel6);

        jLabel4.setText("Seleccione Genero");

        jLabel5.setText("Documento de Identidad");

        documentoIdentidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentoIdentidadActionPerformed(evt);
            }
        });

        jLabel6.setText("Nombres");

        jLabel7.setText("Apellidos");

        jLabel8.setText("Fecha de Nacimiento (DD/MM/AAAA)");

        jLabel9.setText("Email");

        jLabel10.setText("Direccion de Residencia");

        jLabel11.setText("Numero de Contacto");

        nombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombresActionPerformed(evt);
            }
        });

        apellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosActionPerformed(evt);
            }
        });

        numeroContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroContactoActionPerformed(evt);
            }
        });

        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        selectImage.setText("Seleccionar Foto");
        selectImage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        selectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageActionPerformed(evt);
            }
        });

        jLabel12.setText("IMAGEN CAMARA");

        tomarFoto.setText("Abrir Camara");
        tomarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tomarFotoActionPerformed(evt);
            }
        });

        jLabel16.setText("Cargo");

        cargoSeleccionado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Contador", "Vendedor", "Equipo Tecnico" }));
        cargoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargoSeleccionadoActionPerformed(evt);
            }
        });

        jLabel17.setText("Salario");

        salarioIngresado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salarioIngresadoActionPerformed(evt);
            }
        });

        jLabel18.setText("ID");

        iD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iDActionPerformed(evt);
            }
        });

        jLabel19.setText("Fecha Inicio (DD/MM/AAAA)");

        jLabel20.setText("Fecha Final (DD/MM/AAAA)");

        fechaIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaIngresoActionPerformed(evt);
            }
        });

        fechaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaSalidaActionPerformed(evt);
            }
        });

        tomarFotoCamara.setText("Tomar foto");
        tomarFotoCamara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tomarFotoCamaraActionPerformed(evt);
            }
        });

        iniciarGrabacion.setText("Grabar");
        iniciarGrabacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarGrabacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cargoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(direccionResidencia, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                            .addComponent(email)
                                            .addComponent(apellidos)
                                            .addComponent(nombres)
                                            .addComponent(documentoIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(numeroContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(selectImage, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(generoSeleccionado, javax.swing.GroupLayout.Alignment.LEADING, 0, 86, Short.MAX_VALUE)
                                            .addComponent(salarioIngresado, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fechaSalida, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fechaIngreso, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(iniciarGrabacion, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tomarFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                .addComponent(tomarFotoCamara, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Continuar))
                        .addGap(97, 97, 97))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(388, 388, 388))
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(67, 67, 67)
                                .addComponent(iD, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel12))
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(102, 102, 102))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(documentoIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(fechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(direccionResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(numeroContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cargoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(generoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(iniciarGrabacion)
                                .addComponent(tomarFotoCamara))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectImage)
                            .addComponent(tomarFoto))
                        .addGap(47, 47, 47)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(fechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(salarioIngresado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(iD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Continuar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guardarVideo(String nombreVideo) {
        //GUARDAR VIDEO EN EL DIRECTORIO
        try {
            videoBytesGuardar = Files.readAllBytes(Paths.get(rutaDirectorio + nombreVideo + ".mp4"));
        } catch (IOException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void guardarVideoNube(String nombreVideo) {
        try {
            videoBytesNube = Files.readAllBytes(Paths.get(rutaNube + nombreVideo + ".mp4"));
        } catch (IOException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void iniciarGrabacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarGrabacionActionPerformed
        tomarFotoCamara.setVisible(false);
        iniciarGrabacion.setVisible(false);

        String idEmpleado = iD.getText();

// Verificar si se ha ingresado un ID válido
        if (idEmpleado.isEmpty()) {
            // Mostrar un mensaje de error o realizar alguna acción adecuada
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un ID válido.", "ID Vacío", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String nombreVideo = idEmpleado;
        if (timer != null) {
            timer.stop();
        }
// Iniciar el temporizador para actualizar la imagen en tiempo real
        Timer timer = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Mat frame = new Mat();
                if (capture.read(frame)) { // Leer un nuevo cuadro de la cámara
                    BufferedImage image = convertirABufferedImage(frame);
                    Image imagenEscalada = ajustarImagenCaptura(image); // Usar la función ajustarImagen para mantener la relación de aspecto
                    lblImage.setIcon(new ImageIcon(imagenEscalada));
                } else {
                    System.err.println("Error al leer un cuadro de la cámara");
                }
            }
        });

        timer.start();

// Definir las rutas de las ubicaciones donde se guardarán los videos

// Ejecutar la grabación en un hilo separado
        Thread recordingThread = new Thread(() -> {
            long startTime = System.currentTimeMillis();
            Mat frame = new Mat();
            capture.read(frame);

            // Crear los VideoWriter para ambas ubicaciones
            VideoWriter writer1 = new VideoWriter(rutaDirectorio + nombreVideo + ".mp4", VideoWriter.fourcc('H', '2', '6', '4'), 16, frame.size());
            VideoWriter writer2 = new VideoWriter(rutaNube + nombreVideo + ".mp4", VideoWriter.fourcc('H', '2', '6', '4'), 16, frame.size());

            if (!writer1.isOpened() || !writer2.isOpened()) {
                System.out.println("No se pueden abrir los archivos de salida.");
                return;
            }

            // Iniciar bucle de grabación
            while (capture.read(frame)) {
                // Escribir el fotograma en ambos archivos de video
                writer1.write(frame);
                writer2.write(frame);

                long elapsedTime = System.currentTimeMillis() - startTime;

                // Salir del bucle después de 10 segundos
                if (elapsedTime > 5000) {
                    break;
                }
            }

            // Detener el temporizador
            timer.stop();

            // Liberar recursos
            capture.release();
            writer1.release();
            writer2.release();

            guardarVideo(nombreVideo);
            guardarVideoNube(nombreVideo);
        });

        recordingThread.start();

    }//GEN-LAST:event_iniciarGrabacionActionPerformed

    private void tomarFotoCamaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tomarFotoCamaraActionPerformed
        Mat frame = new Mat();

        if (capture.read(frame)) {
            // Convertir la imagen a BufferedImage

            BufferedImage image = convertirABufferedImage(frame);

            // Mostrar la imagen en el JLabel
            Image imagenEscalada = ajustarImagenCaptura(image);
            lblImage.setIcon(new ImageIcon(imagenEscalada));

            try {
                // Convertir la imagen escalada a bytes
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(convertirAImage(imagenEscalada), "jpg", baos);
                bytes = baos.toByteArray();
            } catch (IOException ex) {
                ex.printStackTrace();
                Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.err.println("Error al leer un cuadro de la cámara");
        }
        timer.stop();
        capture.release();
        tomarFotoCamara.setVisible(false);
        iniciarGrabacion.setVisible(false);

    }//GEN-LAST:event_tomarFotoCamaraActionPerformed

    private void fechaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaSalidaActionPerformed

    private void fechaIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaIngresoActionPerformed

    private void iDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iDActionPerformed

    private void salarioIngresadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salarioIngresadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salarioIngresadoActionPerformed

    private void tomarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tomarFotoActionPerformed
        tomarFotoCamara.setVisible(true);
        iniciarGrabacion.setVisible(true);
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        capture = new VideoCapture(0);

        // Iniciar el temporizador para actualizar la imagen en tiempo real
        timer = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Mat frame = new Mat();
                if (capture.read(frame)) { // Leer un nuevo cuadro de la cámara
                    BufferedImage image = convertirABufferedImage(frame);
                    Image imagenEscalada = ajustarImagenCaptura(image); // Usar la función ajustarImagen para mantener la relación de aspecto
                    lblImage.setIcon(new ImageIcon(imagenEscalada));
                } else {

                    System.err.println("Error al leer un cuadro de la cámara");
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_tomarFotoActionPerformed


    private void selectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageActionPerformed
        String Ruta = "";
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filtrado = new FileNameExtensionFilter("JPG, PNG & GIF", "jpg", "png", "gif");
        jFileChooser.setFileFilter(filtrado);
        int respuesta = jFileChooser.showOpenDialog(this);
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            Ruta = jFileChooser.getSelectedFile().getPath();
            Image mImagen = new ImageIcon(Ruta).getImage();

            bytes = devolverImagen(Ruta);

            ImageIcon mIcon = new ImageIcon(mImagen.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
            lblImage.setIcon(mIcon);
        }
    }//GEN-LAST:event_selectImageActionPerformed

    private void numeroContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroContactoActionPerformed

    private void apellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidosActionPerformed

    private void nombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombresActionPerformed

    private void documentoIdentidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentoIdentidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_documentoIdentidadActionPerformed

    private void ContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinuarActionPerformed
        String documentoidentidad = documentoIdentidad.getText();
        String nombre = nombres.getText();
        String apellido = apellidos.getText();
        String fechanacimiento = fechaNacimiento.getText();
        String emaiL = email.getText();
        String direccion = direccionResidencia.getText();
        String numerocontacto = numeroContacto.getText();
        String genero = (String) generoSeleccionado.getSelectedItem();
        String cargo = (String) cargoSeleccionado.getSelectedItem();
        String salario = salarioIngresado.getText();
        float salarioG = Float.parseFloat(salario);
        String fechaingreso = fechaIngreso.getText();
        String fechasalida = fechaSalida.getText();
        String id = iD.getText();
        int iD = Integer.parseInt(id);

        try {
            fachada.ingresarDatos(documentoidentidad, nombre, apellido, fechanacimiento, emaiL, direccion, numerocontacto, cargo, genero, fechaingreso, fechasalida, salarioG, iD, bytes, videoBytesGuardar);
            videoBytesGuardar = null;
            bytes = null;
            lblImage.setIcon(null);
        } catch (SQLException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ContinuarActionPerformed

    private void generoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoSeleccionadoActionPerformed

    }//GEN-LAST:event_generoSeleccionadoActionPerformed

    private void cargoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargoSeleccionadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargoSeleccionadoActionPerformed

    private void bdSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdSeleccionadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bdSeleccionadoActionPerformed

    private void buscarVideoEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarVideoEmpleadoActionPerformed
        String bd = (String) bdSeleccionado.getSelectedItem();

        String idEmpleado = busquedaVideo.getText();
        String nombreVideo = idEmpleado;
        int IdEmpleado = Integer.parseInt(idEmpleado);

        empleadoDao empleadodao = new empleadoDao();

        try {
            if (bd.equals("Directorio")) {
                videoBytes = Files.readAllBytes(Paths.get(rutaDirectorio + nombreVideo + ".mp4"));
            } else if (bd.equals("Base de Datos")) {
                videoBytes = empleadodao.obtenerVideoEmpleado(IdEmpleado);
            } else if (bd.equals("Nube")) {
                videoBytes = Files.readAllBytes(Paths.get(rutaNube + nombreVideo + ".mp4"));
            }
        } catch (IOException | SQLException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        mostrarVideo(videoBytes);
    }//GEN-LAST:event_buscarVideoEmpleadoActionPerformed

    private void apellidosPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosPersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidosPersonaActionPerformed

    private void nombrePersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombrePersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombrePersonaActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed

        personaDTO personadto = null;
        String idEmpleado = idBuscar.getText();
        byte[] imageData = null;

        int IdEmpleado = Integer.parseInt(idEmpleado);
        empleadoDao empleadodao = new empleadoDao();
        System.out.println("try 1");
        try {
            personadto = fachada.mostrarDatos(IdEmpleado);
        } catch (SQLException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("try 2");

        try {
            imageData = empleadodao.obtenerImagenEmpleado(IdEmpleado);
        } catch (SQLException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imageData != null) {
            BufferedImage imagen = null;
            String base64Image = Base64.getEncoder().encodeToString(imageData);
            System.out.println("try 3");

            try {
                imagen = ImageIO.read(new ByteArrayInputStream(imageData));
            } catch (IOException ex) {
                Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
            }
            Image imagenEscalada = ajustarImagen(imagen);
            if (imagenEscalada != null) {
                imagenEmpleado.setIcon(new ImageIcon(imagenEscalada));
            }
        }

        // Mover la lógica que muestra los datos del empleado fuera de la condición
        identificacion.setText(Integer.toString(personadto.getId()));
        nombrePersona.setText(personadto.getNombres());
        apellidosPersona.setText(personadto.getApellidos());
        fechaNacimientoPersona.setText(personadto.getFechaNacimiento());
        emailPersona.setText(personadto.getEmail());
        direccionResidenciaPersona.setText(personadto.getDireccion());
        numeroPersona.setText(personadto.getNumeroContacto());
        generoPersona.setText(personadto.getGenero());
        identificacion.setEditable(false);
        nombrePersona.setEditable(false);
        apellidosPersona.setEditable(false);
        fechaNacimientoPersona.setEditable(false);
        emailPersona.setEditable(false);
        direccionResidenciaPersona.setEditable(false);
        numeroPersona.setEditable(false);
        generoPersona.setEditable(false);
    }//GEN-LAST:event_BuscarActionPerformed

    private void idBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idBuscarActionPerformed

    private void salarioMenorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salarioMenorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salarioMenorActionPerformed

    private void refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarActionPerformed
        String cargo = (String) cargoElegido.getSelectedItem();
        String salario = salarioMenor.getText();
        float salarioG = Float.parseFloat(salario);
        try {
            empleadoDao empleadodao = new empleadoDao();
            List<empleadoDTO> empleados = empleadodao.obtenerEmpleados(cargo, salarioG);
            if (empleados.isEmpty()) {
                System.out.println("Estoy vacío");
            }
            DefaultTableModel modeloTabla = new DefaultTableModel(
                new Object[][]{},
                new String[]{"ID", "Cargo", "Fecha de Ingreso", "Fecha de Salida", "Salario"}
            );
            for (empleadoDTO empleado : empleados) {
                Object[] fila = {
                    empleado.getId(),
                    empleado.getCargo(),
                    empleado.getFechaIngreso(),
                    empleado.getFechaSalida(),
                    empleado.getSalario()
                };
                modeloTabla.addRow(fila);
            }
            tablaEmpleados.setModel(modeloTabla);
        } catch (SQLException ex) {
            //Logger.getLogger(Estudiante_DataBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refrescarActionPerformed

    private BufferedImage convertirABufferedImage(Mat mat) {
        int tipo = BufferedImage.TYPE_BYTE_GRAY;
        if (mat.channels() > 1) {
            tipo = BufferedImage.TYPE_3BYTE_BGR;
        }
        int tamañoBuffer = mat.channels() * mat.cols() * mat.rows();
        byte[] b = new byte[tamañoBuffer];
        mat.get(0, 0, b); // obtener todos los píxeles
        BufferedImage image = new BufferedImage(mat.cols(), mat.rows(), tipo);
        byte[] pixelesDestino = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
        System.arraycopy(b, 0, pixelesDestino, 0, b.length);
        return image;
    }

    private String getExtension(String filename) {
        int index = filename.lastIndexOf('.');
        return index > 0 ? filename.substring(index + 1) : "";
    }

    public byte[] devolverImagen(String Ruta) {
        BufferedImage bufferedImage = null;
        try {
            bufferedImage = ImageIO.read(new File(Ruta));
        } catch (IOException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        ByteArrayOutputStream baos = new ByteArrayOutputStream();

        try {
            ImageIO.write(bufferedImage, "png", baos);
        } catch (IOException e) {
        }
        bytes = baos.toByteArray();
        return bytes;
    }

    public Image ajustarImagen(Image imagen) {

        imagen = imagen.getScaledInstance(imagenEmpleado.getWidth(), imagenEmpleado.getHeight(), Image.SCALE_SMOOTH);

        return imagen;
    }

    public Image ajustarVideo(Image imagen) {

        imagen = imagen.getScaledInstance(videoMostrado.getWidth(), videoMostrado.getHeight(), Image.SCALE_SMOOTH);

        return imagen;
    }

    public Image ajustarImagenCaptura(Image imagen) {

        imagen = imagen.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);

        return imagen;
    }

    public BufferedImage convertirAImage(Image image) {
        BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = bufferedImage.createGraphics();
        g2.drawImage(image, 0, 0, null);
        g2.dispose();
        return bufferedImage;
    }

    private void mostrarVideo(byte[] videoByte) {
        File tempFile;
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        try {
            tempFile = File.createTempFile("videoTemp", ".pm4");
            try (FileOutputStream fos = new FileOutputStream(tempFile)) {
                fos.write(videoByte);
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            return;
        }

        Thread videoHilo = new Thread(() -> {
            try {
                VideoCapture videoCapture = new VideoCapture(tempFile.getAbsolutePath());
                Mat frame = new Mat();
                BufferedImage imagen;
                while (videoCapture.read(frame)) {
                    imagen = convertirABufferedImage(frame);
                    Image imagenEscalada = ajustarVideo(imagen);
                    videoMostrado.setIcon(new ImageIcon(imagenEscalada));
                    Thread.sleep(20);
                }
                videoCapture.release();
            } catch (InterruptedException e) {
            // Restaurar el estado de interrupción del hilo
            Thread.currentThread().interrupt();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        });
        videoHilo.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Continuar;
    private javax.swing.JTextField apellidos;
    private javax.swing.JTextField apellidosPersona;
    private javax.swing.JComboBox<String> bdSeleccionado;
    private javax.swing.JButton buscarVideoEmpleado;
    private javax.swing.JTextField busquedaVideo;
    private javax.swing.JComboBox<String> cargoElegido;
    private javax.swing.JComboBox<String> cargoSeleccionado;
    private javax.swing.JTextField direccionResidencia;
    private javax.swing.JTextField direccionResidenciaPersona;
    private javax.swing.JTextField documentoIdentidad;
    private javax.swing.JTextField email;
    private javax.swing.JTextField emailPersona;
    private javax.swing.JTextField fechaIngreso;
    private javax.swing.JTextField fechaNacimiento;
    private javax.swing.JTextField fechaNacimientoPersona;
    private javax.swing.JTextField fechaSalida;
    private javax.swing.JTextField generoPersona;
    private javax.swing.JComboBox<String> generoSeleccionado;
    private javax.swing.JTextField iD;
    private javax.swing.JTextField idBuscar;
    private javax.swing.JTextField identificacion;
    private javax.swing.JLabel imagenEmpleado;
    private javax.swing.JButton iniciarGrabacion;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTextField nombrePersona;
    private javax.swing.JTextField nombres;
    private javax.swing.JTextField numeroContacto;
    private javax.swing.JTextField numeroPersona;
    private javax.swing.JButton refrescar;
    private javax.swing.JTextField salarioIngresado;
    private javax.swing.JTextField salarioMenor;
    private javax.swing.JButton selectImage;
    private javax.swing.JTable tablaEmpleados;
    private javax.swing.JTable tablaEmpleadosTiempoReal;
    private javax.swing.JButton tomarFoto;
    private javax.swing.JButton tomarFotoCamara;
    private javax.swing.JLabel videoMostrado;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        System.out.println("Entro a actualizar");
        try {
            System.out.println("Entro a actualizar1");
            empleadoDao empleadodao = new empleadoDao();
            List<empleadoDTO> empleados = empleadodao.obtenerTodosEmpleados();
            if (empleados.isEmpty()) {
                System.out.println("Estoy vacío");
            }
            System.out.println("Entro a actualizar2");
            DefaultTableModel modeloTabla = new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"ID Empleado", "Cargo", "Fecha Ingreso", "Fecha Salida", "Salario"}
            );
            for (empleadoDTO empleado:  empleados) {
                Object[] fila = {
                    empleado.getId(),
                    empleado.getCargo(),
                    empleado.getFechaIngreso(),
                    empleado.getFechaSalida(),
                    empleado.getSalario()
                };
                modeloTabla.addRow(fila);
            }
            tablaEmpleadosTiempoReal.setModel(modeloTabla);
        } catch (SQLException ex) {
            Logger.getLogger(empleadoGestion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
